def calc(task):
    while True:
        numbers = {
            "ноль": 0, "один": 1, "два": 2, "три": 3, "четыре": 4, "пять": 5, "шесть": 6, "семь": 7, "восемь": 8, "девять": 9,
            "десять": 10, "одиннадцать": 11, "двенадцать": 12, "тринадцать": 13, "четырнадцать": 14, "пятнадцать": 15, "шестнадцать": 16, "семнадцать": 17, "восемнадцать": 18, "девятнадцать": 19,
            "двадцать": 20, "двадцать один": 21, "двадцать два": 22, "двадцать три": 23, "двадцать четыре": 24, "двадцать пять": 25, "двадцать шесть": 26, "двадцать семь": 27, "двадцать восемь": 28,"двадцать девять": 29, "тридцать": 30, "тридцать один": 31, "тридцать два": 32, "тридцать три": 33, "тридцать четыре": 34, "тридцать пять": 35,  "тридцать шесть": 36, "тридцать семь": 37, "тридцать восемь": 38, "тридцать девять": 39, "сорок": 40,
            "пятьдесят": 50, "пятьдесят один": 51, "пятьдесят два": 52, "пятьдесят три": 53, "пятьдесят четыре": 54, "пятьдесят пять": 55, "пятьдесят шесть": 56, "пятьдесят семь": 57, "пятьдесят восемь": 58, "пятьдесят девять": 59,
            "шестьдесят": 60, "шестьдесят один": 61, "шестьдесят два": 62, "шестьдесят три": 63, "шестьдесят четыре": 64, "шестьдесят пять": 65, "шестьдесят шесть": 66, "шестьдесят семь": 67, "шестьдесят восемь": 68, "шестьдесят девять": 69,
            "семьдесят": 70, "семьдесят один": 71, "семьдесят два": 72, "семьдесят три": 73, "семьдесят четыре": 74, "семьдесят пять": 75, "семьдесят шесть": 76, "семьдесят семь": 77, "семьдесят восемь": 78, "семьдесят девять": 79,
            "восемьдесят": 80, "восемьдесят один": 81, "восемьдесят два": 82, "восемьдесят три": 83, "восемьдесят четыре": 84, "восемьдесят пять": 85, "восемьдесят шесть": 86, "восемьдесят семь": 87, "восемьдесят восемь": 88, "восемьдесят девять": 89,
            "девяносто": 90, "девяносто один": 91, "девяносто два": 92, "девяносто три": 93, "девяносто четыре": 94, "девяносто пять": 95, "девяносто шесть": 96, "девяносто семь": 97, "девяносто восемь": 98, "девяносто девять": 99
        }

        def parse_number(word):
            try:
                return numbers[word.lower()]
            except KeyError:
                return None
        task += " ноль"
        parts = task.split()
        if len(parts) == 4: # если число + знак + число
            number1 = parse_number(parts[0])
            operation = parts[1]
            number2 = parse_number(parts[2])
        if len(parts) == 5:
            try:
                if int(parse_number(parts[0])) + int(parse_number(parts[1])) > int(parse_number(parts[3])):
                    number1 = parse_number(parts[0] + ' ' + parts[1])
                    operation = parts[2]
                    number2 = parse_number(parts[3])
            except TypeError:
                if int(parse_number(parts[0])) < int(parse_number(parts[2])) + int(parse_number(parts[3])):
                    number1 = parse_number(parts[0])
                    operation = parts[1]
                    number2 = parse_number(parts[2] + ' ' + parts[3])
        if len(parts) == 6: # если число * 2 + знак + число * 2
            number1 = parse_number(parts[0] + ' ' + parts[1])
            operation = parts[2]
            number2 = parse_number(parts[3] + ' ' + parts[4])

        if number1 is None or number2 is None:
            return "Ошибка. Некорректный ввод числа"

        if operation == "плюс":
            answer = number1 + number2
        elif operation == "минус":
            answer = number1 - number2
        elif operation == "умножить":
            answer = number1 * number2
        else:
            return "Ошибка. Неверная операция"

        if 0 <= answer <= 99:
            for word, num in numbers.items():
                if num == answer:
                    return word
            return "Ошибка. Результат вышел из допустимого диапазона"  # Не должно дойти сюда
        else:
            return "Ошибка. Результат вышел из допустимого диапазона"


while True:
    try:
        task = input('Введите пример (например, "пятьдесят плюс пять"): ')
        parts1 = task.split()
        if len(parts1) < 3 and len(parts1) > 5 and task.isalpha() == 0:
            continue
        answer = calc(task)
        print("Результат:", answer)
        continue


    except UnboundLocalError:
        continue